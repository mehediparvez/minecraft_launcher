name: Cross-Platform Testing

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18.x, 20.x]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Lint code
      run: npm run lint || echo "No lint script found"
      
    - name: Test captcha functionality
      run: npm run test-captcha
      env:
        DISPLAY: ':99'
      if: runner.os == 'Linux'
      
    - name: Test captcha functionality (Windows)
      run: npm run test-captcha
      if: runner.os == 'Windows'
      
    - name: Test captcha functionality (macOS)
      run: npm run test-captcha
      if: runner.os == 'macOS'
      
    - name: Build application
      run: npm run dist
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: builds-${{ matrix.os }}-node${{ matrix.node-version }}
        path: dist/
        retention-days: 7

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run security audit
      run: npm audit --audit-level=moderate
      
    - name: Scan for vulnerabilities
      run: |
        npm install -g snyk
        snyk test || echo "Snyk scan completed with warnings"

  build-matrix:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build for all platforms
      run: npm run build-all
      
    - name: Upload all platform builds
      uses: actions/upload-artifact@v3
      with:
        name: void-client-all-platforms
        path: dist/
        retention-days: 30
        
    - name: Create release draft
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Void Client ${{ github.ref }}
        draft: true
        prerelease: false
